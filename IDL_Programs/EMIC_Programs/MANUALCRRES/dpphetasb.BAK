;  Program to Compute Single Data Channel Dyn Power
;
; C.L. Waters :  August, 1993
; Canadian Network for Space Research
; The University of Alberta
; Edmonton, Alberta
; Canada
;
; If you make changes to this code, please document them
;
; Modification list :
; * Added Smoothing in the Freq. Domain { Sept, 1994, CW}
; * Altered to take STD2IDL data format { Oct, 1995, CW }
; * Added mouse coordinate locating { Oct, 1995, CW }
; * Added B/W Printout support through Network LPT2 {Nov, 1996, CW}
; * Added PICKFILE {Nov, 1996, CW}
; * Put PSPrintBW into a separate file called PSPRINBW.PRO (Dec, 1996, CW)
; * Blanked out high frequency end where no smoothing is done (July, 97, CW)
; * Corrected Colin's Smoothing routine 06/13/01 and included dB power scale
;
;FUNCTION XTLabps,value
; Ti=value
; Hour=Long(Ti)/3600
; Minute=Long(Ti-3600*Hour)/60
; Secn=Ti-3600*Hour-60*Minute
; RETURN,String(Hour,Minute,$
;       Format="(I2.2,':',I2.2)")
;end
;
Function YFLab,Val
Return,String(Val,Format="(F5.1)")
end
;
;FUNCTION XTLab,axis,index,value
;Ti=value
;Hour=Long(Ti)/3600
;Minute=Long(Ti-3600*Hour)/60
;RETURN,String(Hour,Minute,$
;       Format="(I2.2,':',I2.2)")
;end
;

;Function XTLab,Axis,Index,Value			;Function to format x axis into hours:minutes:seconds.frac
; mSec=long(Value)
 ;milsec=long(mSec) Mod 1000
; seci=Long(mSec/1000)
; secf = long(seci) mod 60
; mni=Long(seci)/60
; mnf = long(mni) mod 60
; hr = Long(mni/60)
; Return,String(hr,mnf,$
;  Format="(I2.2,':',I2.2)")
;end

;Function Tim,Sec
; Hr=Long(Sec)/3600
; Mn=Long(Sec-3600*Hr)/60
; Sc=Sec Mod 60
;Return,String(hr,mn,sc,$
;   Format="(I2.2,':',I2.2,':',i2.2)")
;end
;
;
; Main Program


pro dpphetaSB,cm_eph,cm_val,state,dpown,Dat5
Common BLK5,Ttle,XTtle,YTtle,YRngL,MxFr,MnT,MxT,Scl;,DispArr
Common BLK1,NPnts,SInt,FFTN,DelF,NyqF,MxF,PntRes,NBlocs,NFr
Common BLK2,SpW,SpTyp,Smo
Common BLK3,FrRes,TRes,FBlks
Common BLK4,MnPow,MxPow
common Data,XDat
common poynt,data0,data1,data2,data3
common orbinfo,orb,orb_binfile,orb_date
;common CPow, MxCPow, MnCPow,CPthres,CPArr
common CPow, CPArr
COMMON factR,FACMAX,I0MAX
print,Dat5
;print,'hello there!!'
;stop
Dat555=Dat5
MnPow=fltarr(3)
MxPow=fltarr(3)
valnames=tag_names(cm_val)
Npnts=n_elements(cm_val.(0))
XDat=DblArr(NPnts)
ttt=lonarr(Npnts)
data11=dblarr(Npnts)
data12=dblarr(npnts)
data13=dblarr(Npnts)
ttt=cm_val.(0)
MnT=cm_val.(0)[0]
MxT=cm_val.(0)[n_elements(cm_val.(0))-1]
;********************************************************************************
		;data4=cm_val.(4)
		;data5=cm_val.(5)
		;data1=cm_val.(1)
		;data2=cm_val.(2)
		data11=cm_val.(11)
		data12=cm_val.(12)
		data13=cm_val.(13)

	;	data6=cm_val.(6)


		DXMAX=MAX(cm_val.(11))
		DYMAX=MAX(cm_val.(13))
		FACMAX=abs(DYMAX*DXMAX)
		;stop
TArr=DblArr(NPnts)
TArr=ttt
;********************************************************************************
Widget_control,state.dat_info,$
set_value=string('Calculcating power spectra with default values......')
StaL='CRRES ORBIT'
Year=2001
Month=10
Day=10
Hour=10
Min=10
Sec=10
SInt=(ttt[1]-ttt[0])/1000.
piI = 3.1415926535898
u = 4*PiI
Dte=String(Day,Month,Year,$
 Format="(I2.2,'/',I2.2,'/',I4.2)")
;stop
;stop
;
; Set up Analysis parameters
;
Print,'There are ',NPnts,' Points.'
Print,'The Sample Period is ',SInt,' Sec.'
;Print,'Enter the FFT Analysis Length : '
;Read,FFTN
FFTN=800
;PnTres=200
;NyqF=1000.0/(2.0*SInt)
NyqF=1.0/(2.0*SInt)
Print,'The Nyquist is ',NyqF,' mHz'
;Print,'Enter the Maximum Frequency Required (mHz):'
MxF=3.0
;Read,MxF
;DelF=1000.0/(FFTN*SINT)
DelF=1.0/(FFTN*SINT)

NFr=Fix(MxF/DelF)+1
;MxFr=(NFr-1)*DelF
;stop
Print,'The Frequency Resolution is ',DelF,' mHz.'
TsArr=DblArr(3,FFTN)    ; Time Series Array
TrArr=DblArr(3,FFTN)    ; FFT Array

;REPEAT Begin
 Ans1=0
 ;Print,'Enter the Time Resolution (Points) :'
 ;Read,TRes
TRes=long(150)
 NBlocs=Fix((NPnts-FFTN)/TRes)
 Print,'The Time Resolution is ',TRes*SInt,' Secs'
 Print,'You have ',NBlocs,' FFT Blocks.'
;stop
 ;Print,'Is this O.K ? [0=No]'
Print,'Calcuting Spectrum.....'
 ;Read,Ans
Ans=1
 Ans1=(Ans NE 0)
; endrep $
;UNTIL Ans1
T=LonArr(NBlocs)
T(0)=TArr(0);Long(Hour)*3600+Long(Min)*60+Long(Sec)
For i=1,NBlocs-1 do $
 T(i)=T(i-1)+Long(TRes*SInt)
 ;stop
;DispArr=DblArr(NBlocs,NFr)
CPArr=DblArr(NBlocs,NFr)
;CPArr2=DblArr(NBlocs,NFr)
;CPArr3=DblArr(NBlocs,NFr)
Disparr=DblArr(NBlocs,NFr)
Wsp=0.0
;Print,'Enter the Spectral Weighting, n [f^n] : '
;Read,WSp
Wsp=0
SpW=Wsp
Wght=DblArr(NFr)
For i=0,NFr-1 do Wght(i)=Float(i)^WSp
WndT=1
;Print,'Enter Windowing Option [1=Time, 2=Frequency Domain] : '
;Read,WndT
SpTyp=2
WnDT=SpTyp
If (WndT LT 1) Then WndT=1
If (WndT GT 2) Then WndT=2
ism=0
Sum1=0.0
;For i=0,FFTN-1 do TsArr(i)=XDat(i)
If (WndT EQ 2) Then $
Begin
 ;Print,'Enter the amount of Smoothing [Usually 2] : '
 ;Read,ism
 Smo=2
ism=Smo
 Wnd=DblArr(2*ism+1)
 For i=0,2*ism do $
 Begin
  Wnd(i)=Exp(-(Float(i-ism)/Float(ism/2.0))^2)
  Sum1=Sum1+Wnd(i)
 End
 For i=0,2*ism do Wnd(i)=Wnd(i)/Sum1
 iLFr=ism
 LFr=iLFr*DelF
end
If (WndT EQ 1) Then Wnd=Hanning(FFTN)
;
; Major Loop Starts Here
;
;stop
SpArr=DblArr(NFr+ism)   ; Double Prec. Spectral Array
;SpArr2=DblArr(NFr+ism)   ; Double Prec. Spectral Array
;SpArr3=DblArr(NFr+ism)   ; Double Prec. Spectral Array
;SpArrP=DblArr(NFr+ism)   ; Double Prec. Spectral Array

 For i=0,FFTN-1 do TsArr(0,i)=data11(i)
 For i=0,FFTN-1 do TsArr(1,i)=data12(i)
 For i=0,FFTN-1 do TsArr(2,i)=data13(i)
;end
For Bloc=0,NBlocs-1 do $
Begin
 DTrend,TsArr(0,*),FFTN
 DTrend,TsArr(1,*),FFTN     ; Call Linear Detrend
 DTrend,TsArr(2,*),FFTN

 TrArr(0,*)=FFT(TsArr(0,*),1)    ; FFT - BACKWARD so NO 1/N
 TrArr(1,*)=FFT(TsArr(1,*),1)
 TrArr(2,*)=FFT(TsArr(2,*),1)    ; FFT - BACKWARD so NO 1/N


S=dblarr(n_elements(TrArr(1,*)))
phangle =dblarr(n_elements(TrArr(1,*)))
for yy=long(0), FFTN-long(1) do $
begin
 	S[yy] = sqrt(TrArr(0,yy)^2.0+TrArr(1,yy)^2.0+TrArr(2,yy)^2.0)
    phangle[yy] = atan(sqrt(TrArr(0,yy)^2+TrArr(1,yy)^2)/abs(S[yy]))
    if Tsarr[2,yy] LT float(0.0) then phangle[yy] = Pii - phangle[yy]
	;angleSB[i]=angleSB[i]/pi*180.
end


 For i=0,NFr-1 do $
	Begin
  		V2=Float(FFTN)
  		SpArr(i)=phangle[i]
 end

 If (WndT EQ 2) Then $   ; Frequency Domain Window
 Begin

  ;****************************************************************
  For i=0,iLFr-1 do DispArr(Bloc,i)=SpArr(i)*Wght(i)
  ;For i=0,iLFr-1 do CPArr(Bloc,i)=abs(CP(i))*Wght(i)
;  For i=NFr-1-ism,NFr-1 do DispArr(Bloc,i)=SpArr(i)*Wght(i)
  ;****************************************************************
  ;For i=NFr-1-2*ism,NFr-1 do CPArr(Bloc,i)=abs(CP(i))*Wght(i)
 For i=iLFr,NFr-1-ism do $
  Begin
   DispArr(Bloc,i)=0.0
   ;CPArr(Bloc,i)=0.0
   Js=i-ism
   Je=i+ism
   iWn=-1
   For j=Js,Je do $
   Begin
    iWn=iWn+1
    DispArr(Bloc,i)=DispArr(Bloc,i)+Wnd(iWn)*SpArr(j)
	;CPArr(Bloc,i)=CPArr(Bloc,i)+Wnd(iWn)*abs(CP(j))
   end    ; end of J loop
   DispArr(Bloc,i)=DispArr(Bloc,i)*Wght(i)
   ;CPArr(Bloc,i)=CPArr(Bloc,i)*Wght(i)
  end     ; end of I loop
;		If (CPArr2(Bloc,i) LT 1e-6) Then CPArr2(Bloc,i)=1e-6
   	;	CPArr(Bloc,i)=20*ALog10(CPArr(Bloc,i))

  end     ; end of I loop
 ;end      ; end of If Freq Domain Filt.
 Posn=long((long(Bloc+1))*TRes)
 ;For j=0,FFTN-1 do TsArr(j)=XDat(Posn+j) ; New Data
 For i=long(0),FFTN-long(1) do TsArr(0,long(i))=data11(long(Posn)+long(i))
 ;print,'hello';data11(Posn+i)
 For i=long(0),FFTN-long(1) do TsArr(1,i)=data12(Posn+i)
 For i=long(0),FFTN-long(1) do TsArr(2,i)=data13(Posn+i)
 End    ; end Bloc Loop
;
;**********************************************************
Set_Plot,'WIN'
!P.multi=[0,0,1]
;Erase
Window,1,XSize=700,YSize=650

;Poynting Flux Spectral Plot
;
 Device,Decomposed=0
   ;13



;**********************************************************
;stop
;Set_Plot,'WIN'
;!P.multi=[0,1,3]
;Erase
;Window,1,XSize=700,YSize=650


Datt5='Alpha Angle'

Ttle='Orbit'+orb+' '+orb_date+' '+Datt5[0]+' Spectrum'

 XTtle='Time (UT)'
 YTtle='Frequency (Hz)'
 YRngL=0
 Scl=1

 PAgn=0
 ;MnRng[q]=Min(DispArr[*,*,q])
 ;MxRng[q]=Max(DispArr[*,*,q])
 Device,Decomposed=0
 ;*****************************************************************************************
;  MnPow=fltarr(4)
;MxPow=fltarr(4)
LoadCT,17
 TVLCT,r,g,b,/get
 r(127)=255
 g(127)=255
 b(127)=255
 r(128)=255
 g(128)=255
 b(128)=255
 r(126)=255
 g(126)=255
 b(126)=255

 for ii=0,127 do $
 begin
 r(255-ii)=128+ii
 ;b(fix(128-ii))=b(fix(ii/2))
 ;g(fix(128-ii))=g(fix(ii/2))
 ;r(fix(126+ii))=r(fix((254-ii/2)))
 ;b(fix(126+ii))=b(fix((254-ii/2)))
 ;g(fix(126+ii))=g(fix((254-ii/2)))
end
;FOR I=127,254 do $
;begin
;r(i)=110
;r(i)=170
;g(i)=i-1
;end
tvlct,r,g,b
Disparr=Disparr/pii*180.0
;index=where(dpown LT -10.0,count)
;disparr[index]=90.
index2=where(disparr GT 60. and disparr LT 120.0,count2)
disparr[index2]=90.0
;
;************************************************************************
; Ttle='Orbit'+orb+' '+orb_date+' BXY '+Dat5+' Spectrum'
; XTtle='Time (UT)'
; YTtle='Frequency (Hz)'
; YRngL=0
; Scl=1
; stop
; DYNTV_crres,CPArr,Title=Ttle,YTitle=YTtle,$
; XRange=[Min(ttt[0]),Max(ttt[Npnts-1])],YRange=[YRngL,MxF],$
; Scale=Scl,Range=[-1.0,1.0],Aspect=1.5,ymargin=10.5,dat5=dat5

MnRng=0.0
MxRng=180.

!P.charsize=1
DYNTV_crres,DispArr,Title=Ttle,YTitle=YTtle,$
 XRange=[Min(ttt[0]),Max(ttt[Npnts-1])],YRange=[YRngL,MxFr],$
 Scale=Scl,Range=[MnRng,MxRng],Aspect=1.5,ymargin=10.5,dat5=dat5
  ;Px1=Px1[q],Px2=Px2[q],Py1=Py1[q],Py2=Py2[q];,dat5=dat5
 ;print,MnRng[q]
;print,MxRng[q]
;  stop
 Widget_control,state.dat_info,$
 set_value=string('Use the spectral widget if you wish to re-plot')
He_cycl_freq ,state,cm_eph,cm_val,Datt5;[q]
PntRes=TRes
;MnPow[q]=MnRng[q]
;MxPow[q]=MxRng[q]
eph_inter_win,cm_eph,cm_val,state,Datt5
MxFr=MxF

;stop
;PntRes=TRes
;MnPow=MnCPRng
;MxPow=MxCPRng
;He_cycl_freq ,state,cm_eph,cm_val,Dat5
;stop
;DPChoice3_multi,Dat555
;stop

;*********************************************************************************
;spectralps_multi_ellip,cm_eph,cm_val,state,Dat5,DispArr
;DPChoice3_multi,Dat555
;stop
;!p.noerase=0

;*********************************************************************************
Print,'Finished'
;stop
Set_Plot,'WIN'

end
